# Generated by PNCconf at Sun Nov 28 20:41:31 2021
# Using LinuxCNC version:  2.8
# If you make changes to this file, they will be
# overwritten when you run PNCconf again

loadrt [KINS]KINEMATICS
loadrt [EMCMOT]EMCMOT servo_period_nsec=[EMCMOT]SERVO_PERIOD num_joints=[KINS]JOINTS
loadrt hostmot2
loadrt hm2_eth board_ip="10.10.10.10"                                      #config=" num_encoders=8 num_pwmgens=6 num_stepgens=0" 
setp    [HMOT](CARD0).pwmgen.pwm_frequency 20000
setp    [HMOT](CARD0).pwmgen.pdm_frequency 6000000
setp    [HMOT](CARD0).watchdog.timeout_ns 5000000
loadrt pid names=pid.x,pid.y,pid.z,pid.a,pid.s
loadrt abs names=abs.spindle
loadrt lowpass names=lowpass.spindle
loadrt classicladder_rt numPhysInputs=15 numPhysOutputs=15 numS32in=10 numS32out=10 numFloatIn=10 numFloatOut=10 numBits=50 numWords=50
loadrt mux16 names=jogincr,foincr,soincr

#  Set 7I94 pin 41 to false to see 7I89 encoder pins 
halcmd setp hm2_7i94.0.gpio.041.is_output true
halcmd setp hm2_7i94.0.gpio.041.out false

addf [HMOT](CARD0).read          servo-thread
addf motion-command-handler   servo-thread
addf motion-controller        servo-thread
addf pid.x.do-pid-calcs       servo-thread
addf pid.y.do-pid-calcs       servo-thread
addf pid.z.do-pid-calcs       servo-thread
addf pid.a.do-pid-calcs       servo-thread
addf pid.s.do-pid-calcs       servo-thread
addf classicladder.0.refresh servo-thread
addf jogincr                  servo-thread
addf foincr                   servo-thread
addf soincr                   servo-thread
addf abs.spindle              servo-thread
addf lowpass.spindle          servo-thread
addf [HMOT](CARD0).write         servo-thread

# external IO signals

#*******************
# 7i90HD IO Interface for WRC Boards
#*******************
#*************WRC1************

# --- SPINDLE_ENABLE1 --- Output
setp [HMOT](CARD0).gpio.042.is_output true
net Spindle_Enable1  =>     [HMOT](CARD0).gpio.042.out

# --- SPINDLE_ENABLE0 --- Output
setp [HMOT](CARD0).gpio.043.is_output true
net Spindle_Enable0  =>     [HMOT](CARD0).gpio.043.out

# --- DRAWBAR0_DOWN --- Output
setp [HMOT](CARD0).gpio.048.is_output true
net Drawbar0_Down  =>     [HMOT](CARD0).gpio.048.out

# --- COOLANT-FLOOD --- Output
setp [HMOT](CARD0).gpio.049.is_output true
net coolant-flood  =>     [HMOT](CARD0).gpio.049.out

# --- COOLANT-MIST --- Output
setp [HMOT](CARD0).gpio.050.is_output true
net coolant-mist  =>     [HMOT](CARD0).gpio.050.out

#  ---coolant signals---

net coolant-mist      <=  iocontrol.0.coolant-mist
net coolant-flood     <=  iocontrol.0.coolant-flood

# --- CLAMP_ON --- Output
setp [HMOT](CARD0).gpio.051.is_output true
net Clamp_On  =>     [HMOT](CARD0).gpio.051.out




# --- ORIENT_SPINDLE0_OUT ---
setp [HMOT](CARD0).gpio.052.is_output true
net Orient_Spindle0_out  =>     [HMOT](CARD0).gpio.052.out

# --- ORIENT_SPINDLE0_IN ---
setp [HMOT](CARD0).gpio.053.is_output true
net Orient_Spindle0_In  =>     [HMOT](CARD0).gpio.053.out




#*************WRC2************











# --- Limit BOTH-X ---
net both-x     <=  [HMOT](CARD0).gpio.044.in

# --- Limit BOTH-Y ---
net both-y     <=  [HMOT](CARD0).gpio.045.in

# --- Limit BOTH-Z ---
net both-z     <=  [HMOT](CARD0).gpio.046.in

# --- HOME-A ---
net home-a     <=  [HMOT](CARD0).gpio.047.in

# --- Z_ATC_HEIGHT ---
net Z_ATC_Height     <=  [HMOT](CARD0).gpio.054.in

# --- Z_UP ---
net Z_UP     <=  [HMOT](CARD0).gpio.055.in

# --- MILL_POWER_ON ---
net Mill_Power_On     <=  [HMOT](CARD0).gpio.056.in

# --- LOW_LUBE ---
net Low_Lube     <=  [HMOT](CARD0).gpio.057.in

# --- SPINDLE0_STOPPED ---
net Spindle0_Stopped     <=  [HMOT](CARD0).gpio.058.in

# --- SERVO_OVERLOADS_OK ---
net Servo_Overloads_OK     <=  [HMOT](CARD0).gpio.059.in

# --- SPINDLE0_NO_FAULT ---
net Spindle0_No_Fault     <=  [HMOT](CARD0).gpio.060.in

# --- MACHINE_OVERLOADS_OK ---
net Machine_Overloads_Ok     <=  [HMOT](CARD0).gpio.061.in

# --- DRAWBAR0_HOLDER_IN ---
net Drawbar0_Holder_In     <=  [HMOT](CARD0).gpio.062.in

# --- DRAWBAR0_HOLDER_OUT ---
net Drawbar0_Holder_Out     <=  [HMOT](CARD0).gpio.063.in

# --- SPINDLE_0_1 ---
net Spindle_0_1     <=  [HMOT](CARD0).gpio.064.in

# --- A_ENABLED ---
net A_Enabled     <=  [HMOT](CARD0).gpio.065.in

# --- DRAWBAR0_SWITCH ---
net Drawbar0_Switch     <=  [HMOT](CARD0).gpio.066.in

# --- DRAWBAR1_SWITCH ---
net Drawbar1_Switch     <=  [HMOT](CARD0).gpio.067.in

# --- ORIENT0_OUT ---
net Orient0_Out     <=  [HMOT](CARD0).gpio.068.in

# --- ORIENT0_IN ---
net Orient0_In     <=  [HMOT](CARD0).gpio.069.in

# --- ESTOP-EXT ---
net estop-ext     <=  [HMOT](CARD0).gpio.070.in

# --- FEED_HOLD ---
net Feed_Hold     <=  [HMOT](CARD0).gpio.071.in


#*******************
# 7I83_0 10X DAC for XYZA
# 7I89 8X Encoder Input Card
#*******************

#*******************
#  AXIS X JOINT 0
#*******************

setp   pid.x.Pgain     [JOINT_0]P
setp   pid.x.Igain     [JOINT_0]I
setp   pid.x.Dgain     [JOINT_0]D
setp   pid.x.bias      [JOINT_0]BIAS
setp   pid.x.FF0       [JOINT_0]FF0
setp   pid.x.FF1       [JOINT_0]FF1
setp   pid.x.FF2       [JOINT_0]FF2
setp   pid.x.deadband  [JOINT_0]DEADBAND
setp   pid.x.maxoutput [JOINT_0]MAX_OUTPUT
setp   pid.x.error-previous-target true

net x-index-enable  <=> pid.x.index-enable
net x-enable        =>  pid.x.enable
net x-pos-cmd       =>  pid.x.command
net x-pos-fb        =>  pid.x.feedback
net x-output        <=  pid.x.output

# ---PWM Generator signals/setup---

setp   [HMOT](CARD0).pwmgen.01.output-type 1
setp   [HMOT](CARD0).pwmgen.01.scale  [JOINT_0]OUTPUT_SCALE

net x-output                             => [HMOT](CARD0).pwmgen.01.value
net x-pos-cmd    joint.0.motor-pos-cmd
net x-enable     joint.0.amp-enable-out  => [HMOT](CARD0).pwmgen.01.enable

# ---Encoder feedback signals/setup---

setp    [HMOT](CARD0).encoder.01.counter-mode 0
setp    [HMOT](CARD0).encoder.01.filter 1
setp    [HMOT](CARD0).encoder.01.index-invert 0
setp    [HMOT](CARD0).encoder.01.index-mask 0
setp    [HMOT](CARD0).encoder.01.index-mask-invert 0
setp    [HMOT](CARD0).encoder.01.scale  [JOINT_0]ENCODER_SCALE

net x-pos-fb               <=  [HMOT](CARD0).encoder.01.position
net x-vel-fb               <=  [HMOT](CARD0).encoder.01.velocity
net x-pos-fb               =>  joint.0.motor-pos-fb
net x-index-enable    joint.0.index-enable  <=>  [HMOT](CARD0).encoder.01.index-enable
net x-pos-rawcounts        <=  [HMOT](CARD0).encoder.01.rawcounts

# ---setup home / limit switch signals---

net x-home-sw     =>  joint.0.home-sw-in
net both-x     =>  joint.0.neg-lim-sw-in
net both-x     =>  joint.0.pos-lim-sw-in

#*******************
#  AXIS Y JOINT 1
#*******************

setp   pid.y.Pgain     [JOINT_1]P
setp   pid.y.Igain     [JOINT_1]I
setp   pid.y.Dgain     [JOINT_1]D
setp   pid.y.bias      [JOINT_1]BIAS
setp   pid.y.FF0       [JOINT_1]FF0
setp   pid.y.FF1       [JOINT_1]FF1
setp   pid.y.FF2       [JOINT_1]FF2
setp   pid.y.deadband  [JOINT_1]DEADBAND
setp   pid.y.maxoutput [JOINT_1]MAX_OUTPUT
setp   pid.y.error-previous-target true

net y-index-enable  <=> pid.y.index-enable
net y-enable        =>  pid.y.enable
net y-pos-cmd       =>  pid.y.command
net y-pos-fb        =>  pid.y.feedback
net y-output        <=  pid.y.output

# ---PWM Generator signals/setup---

setp   [HMOT](CARD0).pwmgen.00.output-type 1
setp   [HMOT](CARD0).pwmgen.00.scale  [JOINT_1]OUTPUT_SCALE

net y-output                             => [HMOT](CARD0).pwmgen.00.value
net y-pos-cmd    joint.1.motor-pos-cmd
net y-enable     joint.1.amp-enable-out  => [HMOT](CARD0).pwmgen.00.enable

# ---Encoder feedback signals/setup---

setp    [HMOT](CARD0).encoder.00.counter-mode 0
setp    [HMOT](CARD0).encoder.00.filter 1
setp    [HMOT](CARD0).encoder.00.index-invert 0
setp    [HMOT](CARD0).encoder.00.index-mask 0
setp    [HMOT](CARD0).encoder.00.index-mask-invert 0
setp    [HMOT](CARD0).encoder.00.scale  [JOINT_1]ENCODER_SCALE

net y-pos-fb               <=  [HMOT](CARD0).encoder.00.position
net y-vel-fb               <=  [HMOT](CARD0).encoder.00.velocity
net y-pos-fb               =>  joint.1.motor-pos-fb
net y-index-enable    joint.1.index-enable  <=>  [HMOT](CARD0).encoder.00.index-enable
net y-pos-rawcounts        <=  [HMOT](CARD0).encoder.00.rawcounts

# ---setup home / limit switch signals---

net y-home-sw     =>  joint.1.home-sw-in
net both-y     =>  joint.1.neg-lim-sw-in
net both-y     =>  joint.1.pos-lim-sw-in

#*******************
#  AXIS Z JOINT 2
#*******************

setp   pid.z.Pgain     [JOINT_2]P
setp   pid.z.Igain     [JOINT_2]I
setp   pid.z.Dgain     [JOINT_2]D
setp   pid.z.bias      [JOINT_2]BIAS
setp   pid.z.FF0       [JOINT_2]FF0
setp   pid.z.FF1       [JOINT_2]FF1
setp   pid.z.FF2       [JOINT_2]FF2
setp   pid.z.deadband  [JOINT_2]DEADBAND
setp   pid.z.maxoutput [JOINT_2]MAX_OUTPUT
setp   pid.z.error-previous-target true

net z-index-enable  <=> pid.z.index-enable
net z-enable        =>  pid.z.enable
net z-pos-cmd       =>  pid.z.command
net z-pos-fb        =>  pid.z.feedback
net z-output        <=  pid.z.output

# ---PWM Generator signals/setup---

setp   [HMOT](CARD0).pwmgen.03.output-type 1
setp   [HMOT](CARD0).pwmgen.03.scale  [JOINT_2]OUTPUT_SCALE

net z-output                             => [HMOT](CARD0).pwmgen.03.value
net z-pos-cmd    joint.2.motor-pos-cmd
net z-enable     joint.2.amp-enable-out  => [HMOT](CARD0).pwmgen.03.enable

# ---Encoder feedback signals/setup---

setp    [HMOT](CARD0).encoder.03.counter-mode 0
setp    [HMOT](CARD0).encoder.03.filter 1
setp    [HMOT](CARD0).encoder.03.index-invert 0
setp    [HMOT](CARD0).encoder.03.index-mask 0
setp    [HMOT](CARD0).encoder.03.index-mask-invert 0
setp    [HMOT](CARD0).encoder.03.scale  [JOINT_2]ENCODER_SCALE

net z-pos-fb               <=  [HMOT](CARD0).encoder.03.position
net z-vel-fb               <=  [HMOT](CARD0).encoder.03.velocity
net z-pos-fb               =>  joint.2.motor-pos-fb
net z-index-enable    joint.2.index-enable  <=>  [HMOT](CARD0).encoder.03.index-enable
net z-pos-rawcounts        <=  [HMOT](CARD0).encoder.03.rawcounts

# ---setup home / limit switch signals---

net z-home-sw     =>  joint.2.home-sw-in
net both-z     =>  joint.2.neg-lim-sw-in
net both-z     =>  joint.2.pos-lim-sw-in

#*******************
#  AXIS A JOINT 3
#*******************

setp   pid.a.Pgain     [JOINT_3]P
setp   pid.a.Igain     [JOINT_3]I
setp   pid.a.Dgain     [JOINT_3]D
setp   pid.a.bias      [JOINT_3]BIAS
setp   pid.a.FF0       [JOINT_3]FF0
setp   pid.a.FF1       [JOINT_3]FF1
setp   pid.a.FF2       [JOINT_3]FF2
setp   pid.a.deadband  [JOINT_3]DEADBAND
setp   pid.a.maxoutput [JOINT_3]MAX_OUTPUT
setp   pid.a.error-previous-target true

net a-index-enable  <=> pid.a.index-enable
net a-enable        =>  pid.a.enable
net a-pos-cmd       =>  pid.a.command
net a-pos-fb        =>  pid.a.feedback
net a-output        <=  pid.a.output

# ---PWM Generator signals/setup---

setp   [HMOT](CARD0).pwmgen.02.output-type 1
setp   [HMOT](CARD0).pwmgen.02.scale  [JOINT_3]OUTPUT_SCALE

net a-output                             => [HMOT](CARD0).pwmgen.02.value
net a-pos-cmd    joint.3.motor-pos-cmd
net a-enable     joint.3.amp-enable-out  => [HMOT](CARD0).pwmgen.02.enable

# ---Encoder feedback signals/setup---

setp    [HMOT](CARD0).encoder.02.counter-mode 0
setp    [HMOT](CARD0).encoder.02.filter 1
setp    [HMOT](CARD0).encoder.02.index-invert 0
setp    [HMOT](CARD0).encoder.02.index-mask 0
setp    [HMOT](CARD0).encoder.02.index-mask-invert 0
setp    [HMOT](CARD0).encoder.02.scale  [JOINT_3]ENCODER_SCALE

net a-pos-fb               <=  [HMOT](CARD0).encoder.02.position
net a-vel-fb               <=  [HMOT](CARD0).encoder.02.velocity
net a-pos-fb               =>  joint.3.motor-pos-fb
net a-index-enable    joint.3.index-enable  <=>  [HMOT](CARD0).encoder.02.index-enable
net a-pos-rawcounts        <=  [HMOT](CARD0).encoder.02.rawcounts

# ---setup home / limit switch signals---

net home-a     =>  joint.3.home-sw-in
net a-neg-limit     =>  joint.3.neg-lim-sw-in
net a-pos-limit     =>  joint.3.pos-lim-sw-in



#*******************
# 7I83_1 10X DAC for Spindle0 Main & Spindle1 HS
#*******************

# --- SPINDLE_PWM0 ---
setp    [HMOT](CARD0).pwmgen.05.output-type 1
net Spindle_PWM0-enable     <=  [HMOT](CARD0).pwmgen.05.enable
net Spindle_PWM0-value      <=  [HMOT](CARD0).pwmgen.05.value


#*******************
#  SPINDLE 0 Main
#*******************

setp   pid.s.Pgain     [SPINDLE_0]P
setp   pid.s.Igain     [SPINDLE_0]I
setp   pid.s.Dgain     [SPINDLE_0]D
setp   pid.s.bias      [SPINDLE_0]BIAS
setp   pid.s.FF0       [SPINDLE_0]FF0
setp   pid.s.FF1       [SPINDLE_0]FF1
setp   pid.s.FF2       [SPINDLE_0]FF2
setp   pid.s.deadband  [SPINDLE_0]DEADBAND
setp   pid.s.maxoutput [SPINDLE_0]MAX_OUTPUT
setp   pid.s.error-previous-target true

net spindle-index-enable  <=> pid.s.index-enable
net spindle-enable        =>  pid.s.enable
net spindle-vel-cmd-rpm     => pid.s.command
net spindle-vel-fb-rpm      => pid.s.feedback
net spindle-output        <=  pid.s.output

# ---setup spindle control signals---

net spindle-vel-cmd-rps        <=  spindle.0.speed-out-rps
net spindle-vel-cmd-rps-abs    <=  spindle.0.speed-out-rps-abs
net spindle-vel-cmd-rpm        <=  spindle.0.speed-out
net spindle-vel-cmd-rpm-abs    <=  spindle.0.speed-out-abs
net spindle-enable             <=  spindle.0.on
net spindle-cw                 <=  spindle.0.forward
net spindle-ccw                <=  spindle.0.reverse
net spindle-brake              <=  spindle.0.brake
net spindle-revs               =>  spindle.0.revs
net spindle-at-speed           =>  spindle.0.at-speed
net spindle-vel-fb-rps         =>  spindle.0.speed-in
net spindle-index-enable      <=>  spindle.0.index-enable

# ---Setup spindle at speed signals---

sets spindle-at-speed true


#******************************
# connect miscellaneous signals
#******************************

#  ---HALUI signals---

net axis-select-x  halui.axis.x.select
net jog-x-pos      halui.axis.x.plus
net jog-x-neg      halui.axis.x.minus
net jog-x-analog   halui.axis.x.analog
net x-is-homed     halui.joint.0.is-homed
net axis-select-y  halui.axis.y.select
net jog-y-pos      halui.axis.y.plus
net jog-y-neg      halui.axis.y.minus
net jog-y-analog   halui.axis.y.analog
net y-is-homed     halui.joint.1.is-homed
net axis-select-z  halui.axis.z.select
net jog-z-pos      halui.axis.z.plus
net jog-z-neg      halui.axis.z.minus
net jog-z-analog   halui.axis.z.analog
net z-is-homed     halui.joint.2.is-homed
net axis-select-a  halui.axis.a.select
net jog-a-pos      halui.axis.a.plus
net jog-a-neg      halui.axis.a.minus
net jog-a-analog   halui.axis.a.analog
net a-is-homed     halui.joint.3.is-homed
net jog-selected-pos      halui.axis.selected.plus
net jog-selected-neg      halui.axis.selected.minus
net spindle-manual-cw     halui.spindle.0.forward
net spindle-manual-ccw    halui.spindle.0.reverse
net spindle-manual-stop   halui.spindle.0.stop
net machine-is-on         halui.machine.is-on
net jog-speed             halui.axis.jog-speed
net MDI-mode              halui.mode.is-mdi


#  ---probe signal---

net probe-in     =>  motion.probe-input

# ---jogwheel signals to mesa encoder - shared MPG---

net axis-selected-count     <=  [HMOT](CARD0).encoder.05.count

#  ---mpg signals---

#       for axis x MPG
setp    axis.x.jog-vel-mode 0
net selected-jog-incr    =>  axis.x.jog-scale
net axis-select-x       =>  axis.x.jog-enable
net axis-selected-count =>  axis.x.jog-counts

#       for axis y MPG
setp    axis.y.jog-vel-mode 0
net selected-jog-incr    =>  axis.y.jog-scale
net axis-select-y       =>  axis.y.jog-enable
net axis-selected-count =>  axis.y.jog-counts

#       for axis z MPG
setp    axis.z.jog-vel-mode 0
net selected-jog-incr    =>  axis.z.jog-scale
net axis-select-z       =>  axis.z.jog-enable
net axis-selected-count =>  axis.z.jog-counts

#       for axis a MPG
setp    axis.a.jog-vel-mode 0
net selected-jog-incr    =>  axis.a.jog-scale
net axis-select-a       =>  axis.a.jog-enable
net axis-selected-count =>  axis.a.jog-counts

sets selected-jog-incr     0.000000

#*******************
# 7I73 Panel Interface
#*******************

# ---feed override signals to mesa encoder - mpg---

net fo-count     <=  [HMOT](CARD0).encoder.07.count

# connect feed overide increments - MPG

    setp halui.feed-override.direct-value false
    setp halui.feed-override.scale .01
    setp halui.feed-override.count-enable true
net fo-count            =>  halui.feed-override.counts

# ---spindle override signals to mesa encoder - mpg---

net so-count     <=  [HMOT](CARD0).encoder.06.count

# connect spindle overide increments - MPG

    setp halui.spindle.0.override.direct-value false
    setp halui.spindle.0.override.scale .01
    setp halui.spindle.0.override.count-enable true
net so-count              =>  halui.spindle.0.override.counts

#  ---motion control signals---

net in-position               <=  motion.in-position
net machine-is-enabled        <=  motion.motion-enabled

#  ---digital in / out signals---

#  ---estop signals---

net estop-out     <=  iocontrol.0.user-enable-out
net estop-ext     =>  iocontrol.0.emc-enable-in

#  ---manual tool change signals---

loadusr -W hal_manualtoolchange
net tool-change-request     iocontrol.0.tool-change       =>  hal_manualtoolchange.change
net tool-change-confirmed   iocontrol.0.tool-changed      <=  hal_manualtoolchange.changed
net tool-number             iocontrol.0.tool-prep-number  =>  hal_manualtoolchange.number
net tool-prepare-loopback   iocontrol.0.tool-prepare      =>  iocontrol.0.tool-prepared


# Load Classicladder without GUI (can reload LADDER GUI in AXIS GUI

loadusr classicladder --nogui custom.clp

